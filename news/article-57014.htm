<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://v2rayclashnode.github.io/news/article-57014.htm" />
    <meta charset="utf-8">
    <meta content="width=device-width, initial-scale=1.0" name="viewport">
    <title>springBoot过滤器、拦截器配置使用</title>
        <meta name="description" content="拦截器与过滤器的区别 ：  拦截器是基于java的反射机制的，而过滤器是基于函数回调。 拦截器不依赖与servlet容器，过滤器依赖与servlet容器。 拦截器只能对action请求起作用，而过滤器" />
        <link rel="icon" href="/assets/website/img/v2rayclashnode/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="V2rayClashNode节点订阅站">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://v2rayclashnode.github.io/news/article-57014.htm" />
    <meta property="og:site_name" content="V2rayClashNode节点订阅站" />
    <meta property="og:title" content="springBoot过滤器、拦截器配置使用" />
    <meta property="og:image" content="https://v2rayclashnode.github.io/uploads/20240531/ec366bef2b05c7d82151f99dc8d8c54e.webp" />
        <meta property="og:release_date" content="2025-02-15T05:22:46" />
    <meta property="og:updated_time" content="2025-02-15T05:22:46" />
        <meta property="og:description" content="拦截器与过滤器的区别 ：  拦截器是基于java的反射机制的，而过滤器是基于函数回调。 拦截器不依赖与servlet容器，过滤器依赖与servlet容器。 拦截器只能对action请求起作用，而过滤器" />
    
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="springBoot过滤器、拦截器配置使用">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">

    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css?family=Open+Sans:300,300i,400,400i,600,600i,700,700i|Raleway:300,300i,400,400i,500,500i,600,600i,700,700i|Poppins:300,300i,400,400i,500,500i,600,600i,700,700i" rel="stylesheet">
    <!-- Vendor CSS Files -->
    <link href="/assets/website/js/frontend/v2rayclashnode/bootstrap/css/bootstrap.min.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/v2rayclashnode/bootstrap-icons/bootstrap-icons.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/v2rayclashnode/boxicons/css/boxicons.min.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/v2rayclashnode/glightbox/css/glightbox.min.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/v2rayclashnode/swiper/swiper-bundle.min.css" rel="stylesheet">
    <!-- Template Main CSS File -->
    <link href="/assets/website/css/v2rayclashnode/style.css" rel="stylesheet">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-Y4BEYC2CJF"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-Y4BEYC2CJF');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!-- ======= Header ======= -->
    <header id="header" class="fixed-top">
        <div class="container d-flex align-items-center justify-content-between">
            <a href="/">
                        <span class="logo">V2ray Clash Node</span>
                        </a>
            <nav id="navbar" class="navbar">
                <ul>
                                        <li><a class="nav-link" href="/">首页</a></li>
                                        <li><a class="nav-link" href="/free-nodes/">免费节点</a></li>
                                        <li><a class="nav-link" href="/paid-subscribe/">推荐机场</a></li>
                                        <li><a class="nav-link" href="/client.htm">客户端</a></li>
                                        <li><a class="nav-link" href="/news/">新闻资讯</a></li>
                                    </ul>
                <i class="bi bi-list mobile-nav-toggle"></i>
            </nav><!-- .navbar -->
        </div>
    </header><!-- End Header -->
    <main id="main">
        <!-- ======= Breadcrumbs ======= -->
        <section class="breadcrumbs">
            <div class="container">
                <div class="d-flex justify-content-between align-items-center">
                    <div class="row">
                        <h1>springBoot过滤器、拦截器配置使用</h1>
                    </div>
                </div>
            </div>
            <div class="container">
                <ol>
                    <li><a href="/">首页</a></li>
                    <li><a href="/news/">新闻资讯</a></li>
                    <li>正文</li>
                </ol>
            </div>
        </section><!-- End Breadcrumbs -->
        <!-- ======= About Section ======= -->
        <section id="about" class="about">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                                        <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<div id="content_views" class="markdown_views prism-atom-one-light"> <p><strong>拦截器与过滤器的区别</strong> ：</p> <ol> <li>拦截器是基于java的反射机制的，而过滤器是基于函数回调。</li> <li>拦截器不依赖与servlet容器，过滤器依赖与servlet容器。</li> <li>拦截器只能对action请求起作用，而过滤器则可以对几乎所有的请求起作用。</li> <li>拦截器可以访问action上下文、值栈里的对象，而过滤器不能访问。</li> <li>在action的生命周期中，拦截器可以多次被调用，而过滤器只能在容器初始化时被调用一次拦截器的代<br /> 码实现。</li> <li>Filter基于回调函数，我们需要实现的filter接口中doFilter方法就是回调函数，而interceptor则基于<br /> java本身的反射机制,这是两者最本质的区别。</li> <li>Filter是依赖于servlet容器的，即只能在servlet容器中执行，很显然没有servlet容器就无法来回调<br /> doFilter方法。而interceptor与servlet容器无关。</li> <li>Filter的过滤范围比Interceptor大,Filter除了过滤请求外通过通配符可以保护页面，图片，文件等等，<br /> 而Interceptor只能过滤请求。</li> <li>Filter的过滤例外一般是在加载的时候在init方法声明,而Interceptor可以通过声明是guest请求还<br /> 是user请求来辨别是否过滤。<br /><strong>一.过滤器</strong><br /><strong>1.不使用springSecurity时，添加过滤器在启动类中增加</strong><br /> MyFilter需继承Filter</li> </ol> <pre><code>@Bean public FilterRegistrationBean myFilter(){ 	FilterRegistrationBean registrationBean=new FilterRegistrationBean(); 	FilterRegistrationBean.setName("myFilter"); 	MyFilter mf=new MyFilter(); 	//spring boot 会按照order值的大小，从小到大的顺序来依次过滤 	registrationBean.setOrder(0); 	registration.addUrlPatterns("/*"); 	return registration; }</code></pre> <p><strong>使用springSecurity</strong></p> <pre><code>@EnableGlobalMethodSecurity(prePostEnabled = true, securedEnabled = true) public class SecurityConfig extends WebSecurityConfigurerAdapter{ 	@Override     protected void configure(HttpSecurity httpSecurity) throws Exception     {   //退出访问/logout时，执行logoutSuccessHandler这个处理器                   httpSecurity.logout().logoutUrl("/logout").logoutSuccessHandler(logoutSuccessHandler); 		//添加过滤器，先执行AFilter，再执行authenticationTokenFilter         httpSecurity.addFilterBefore(authenticationTokenFilter, AFilter.class);     } }</code></pre> <p>得继承OncePerRequestFilter<br /> @Component<br /> @Order(1)//指定执行顺序<br /> public JwtAuthenticationTokenFilter extends OncePerRequestFilter<br /><strong>二：拦截器</strong><br /> 拦截器，在AOP（Aspect-Oriented Programming）中用于在某个方法或字段被访问之前，进行拦截然后在之前或之后加入某些操作。拦截是AOP的一种实现策略<br /> 1.一般使用<br /> MyInterceptor需继承HandlerInterceptor</p> <pre><code>@Configuration public class MyMvcConfigurer implements WebMvcConfigurer{ 	@Override 	public void addInterceptors(InterceptorRegistry registry){ 		//添加自定义拦截器 		MyInterceptor mi=new MyInterceptor(); 		InterceptorRegistration i=registry.addInterceptor(mi); 		//拦截哪些路径 		i.addPathPatterns(new String[]{"/**"}); 		//不拦截哪些路径 		i.excludePathPatterns(new String[]{"/a"}); 	} }</code></pre> <p>2.在后端数据返回到前端时做一些处理</p> <pre><code>@ControllerAdvice public class MRSBA implements ResponseBodyAdvice{ 	@Override //obj为返回的数据 mt为数据格式类型 	public Object beforeBodyWrite(Object obj,MethodParameter param,,MediaType mt,Class converter,ServerHttpRequest httpRequest,ServerHttpResponse httpResponse){ 		//具体业务逻辑 	} }</code></pre> </div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-57013.htm">序列化之@JsonComponent、@JsonInclude、@JsonSerialize、@JsonIgnore、JsonProperty区别与联系作用</a></p>
                                        <p>下一个：<a href="/news/article-57577.htm">动物防疫中心可以给猫打疫苗吗（动物防疫中心可以给猫打疫苗吗）</a></p>
                                    </div>
                                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2025-3-4-free-node-subscribe-links.htm" title="「3月4日」最高速度21.6M/S，2025年V2ray/Clash/SSR/Shadowrocket每天更新免费节点订阅链接">「3月4日」最高速度21.6M/S，2025年V2ray/Clash/SSR/Shadowrocket每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-62207.htm" title="动物医院取什么名字好听一点（动物医院牌子）">动物医院取什么名字好听一点（动物医院牌子）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-28-clash-node-daily-updates.htm" title="「1月28日」最高速度19.3M/S，2025年SSR/Clash/V2ray/Shadowrocket每天更新免费节点订阅链接">「1月28日」最高速度19.3M/S，2025年SSR/Clash/V2ray/Shadowrocket每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-46025.htm" title="中国饲料排名第一（中国饲料排名第一的企业）">中国饲料排名第一（中国饲料排名第一的企业）</a></li>
                        <li class="py-2"><a href="/news/article-65252.htm" title="宠物买卖纠纷找哪个部门协调解决 宠物买卖纠纷找哪个部门协调解决呢">宠物买卖纠纷找哪个部门协调解决 宠物买卖纠纷找哪个部门协调解决呢</a></li>
                        <li class="py-2"><a href="/news/article-42042.htm" title="宠物粮加工设备一套得多少钱 宠物粮食加工厂设备">宠物粮加工设备一套得多少钱 宠物粮食加工厂设备</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-2-7-free-high-speed-nodes.htm" title="「2月7日」最高速度22.9M/S，2025年V2ray/Clash/Shadowrocket/SSR每天更新免费节点订阅链接">「2月7日」最高速度22.9M/S，2025年V2ray/Clash/Shadowrocket/SSR每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-55343.htm" title="Java两个List＜T＞ 求交集,差集,并集,去重后的并集_java">Java两个List＜T＞ 求交集,差集,并集,去重后的并集_java</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-9-clash-v2ray-ss-ssr.htm" title="「1月9日」最高速度20.2M/S，2025年V2ray/Shadowrocket/SSR/Clash每天更新免费节点订阅链接">「1月9日」最高速度20.2M/S，2025年V2ray/Shadowrocket/SSR/Clash每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-59268.htm" title="被小猫抓了多久过安全期（被小猫抓了多久会发病）">被小猫抓了多久过安全期（被小猫抓了多久会发病）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">12</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">84</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">84</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                    </ul>
    </div>
</div>



                    </div>
                </div>
            </div>
        </section><!-- End About Section -->
    </main><!-- End #main -->
        <!-- ======= Footer ======= -->
    <footer id="footer">
        <div class="container footer-bottom clearfix">
            <div class="copyright">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                V2rayClashNode节点订阅站 版权所有
                <br />
                Powered by WordPress
            </div>
        </div>
    </footer><!-- End Footer -->
    <a href="#" class="back-to-top d-flex align-items-center justify-content-center"><i class="bi bi-arrow-up-short"></i></a>
    <!-- Vendor JS Files -->
    <script src="/assets/website/js/frontend/v2rayclashnode/jquery-3.5.1.min.js"></script>
    <script src="/assets/website/js/frontend/v2rayclashnode/bootstrap/js/bootstrap.bundle.min.js"></script>
    <script src="/assets/website/js/frontend/v2rayclashnode/glightbox/js/glightbox.min.js"></script>
    <script src="/assets/website/js/frontend/v2rayclashnode/isotope-layout/isotope.pkgd.min.js"></script>
    <script src="/assets/website/js/frontend/v2rayclashnode/php-email-form/validate.js"></script>
    <script src="/assets/website/js/frontend/v2rayclashnode/purecounter/purecounter.js"></script>
    <script src="/assets/website/js/frontend/v2rayclashnode/swiper/swiper-bundle.min.js"></script>
    <!-- Template Main JS File -->
    <script src="/assets/website/js/frontend/v2rayclashnode/main.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>