<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://v2rayclashnode.github.io/news/article-52102.htm" />
    <meta charset="utf-8">
    <meta content="width=device-width, initial-scale=1.0" name="viewport">
    <title>gateway聚合swagger3统一管理api文档</title>
        <meta name="description" content="　　springboot微服务整合swagger3方法很简单，下文会演示。但是在分布式项目中如果每个微服务都需要单独的分开访问获取接口文档就不方便了，本文将详细讲解springcloud gatewa" />
        <link rel="icon" href="/assets/website/img/v2rayclashnode/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="V2rayClashNode节点订阅站">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://v2rayclashnode.github.io/news/article-52102.htm" />
    <meta property="og:site_name" content="V2rayClashNode节点订阅站" />
    <meta property="og:title" content="gateway聚合swagger3统一管理api文档" />
    <meta property="og:image" content="https://v2rayclashnode.github.io/uploads/20240531/6640349e82a4ad58db4739309408522e.webp" />
        <meta property="og:release_date" content="2025-02-06T05:29:34" />
    <meta property="og:updated_time" content="2025-02-06T05:29:34" />
        <meta property="og:description" content="　　springboot微服务整合swagger3方法很简单，下文会演示。但是在分布式项目中如果每个微服务都需要单独的分开访问获取接口文档就不方便了，本文将详细讲解springcloud gatewa" />
    
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="gateway聚合swagger3统一管理api文档">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">

    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css?family=Open+Sans:300,300i,400,400i,600,600i,700,700i|Raleway:300,300i,400,400i,500,500i,600,600i,700,700i|Poppins:300,300i,400,400i,500,500i,600,600i,700,700i" rel="stylesheet">
    <!-- Vendor CSS Files -->
    <link href="/assets/website/js/frontend/v2rayclashnode/bootstrap/css/bootstrap.min.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/v2rayclashnode/bootstrap-icons/bootstrap-icons.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/v2rayclashnode/boxicons/css/boxicons.min.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/v2rayclashnode/glightbox/css/glightbox.min.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/v2rayclashnode/swiper/swiper-bundle.min.css" rel="stylesheet">
    <!-- Template Main CSS File -->
    <link href="/assets/website/css/v2rayclashnode/style.css" rel="stylesheet">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-Y4BEYC2CJF"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-Y4BEYC2CJF');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!-- ======= Header ======= -->
    <header id="header" class="fixed-top">
        <div class="container d-flex align-items-center justify-content-between">
            <a href="/">
                        <span class="logo">V2ray Clash Node</span>
                        </a>
            <nav id="navbar" class="navbar">
                <ul>
                                        <li><a class="nav-link" href="/">首页</a></li>
                                        <li><a class="nav-link" href="/free-nodes/">免费节点</a></li>
                                        <li><a class="nav-link" href="/paid-subscribe/">推荐机场</a></li>
                                        <li><a class="nav-link" href="/news/">新闻资讯</a></li>
                                        <li><a class="nav-link" href="#">关于</a></li>
                    <li><a class="nav-link" href="#">联系</a></li>
                </ul>
                <i class="bi bi-list mobile-nav-toggle"></i>
            </nav><!-- .navbar -->
        </div>
    </header><!-- End Header -->
    <main id="main">
        <!-- ======= Breadcrumbs ======= -->
        <section class="breadcrumbs">
            <div class="container">
                <div class="d-flex justify-content-between align-items-center">
                    <div class="row">
                        <h1>gateway聚合swagger3统一管理api文档</h1>
                    </div>
                </div>
            </div>
            <div class="container">
                <ol>
                    <li><a href="/">首页</a></li>
                    <li><a href="/news/">新闻资讯</a></li>
                    <li>正文</li>
                </ol>
            </div>
        </section><!-- End Breadcrumbs -->
        <!-- ======= About Section ======= -->
        <section id="about" class="about">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                                        <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<p>　　springboot微服务整合swagger3方法很简单，下文会演示。但是在分布式项目中如果每个微服务都需要单独的分开访问获取接口文档就不方便了，本文将详细讲解springcloud gateway网关如何聚合统一管理swagger接口文档。</p> <p>先贴张整合后的效果图(通过切换左上角的下拉窗口获取每个微服务的接口文档)：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/c45e5337db8451c4f91d8b547348f2c7.jpg" alt="gateway聚合swagger3统一管理api文档"></p> <h3>一、swagger简介</h3> <div> <ul> <li>基于 OpenAPI 规范（OpenAPI Specification，OAS）构建的开源接口文档自动生成工具，可以让开发人员快速设计、构建、记录以及使用 Rest API。</li> </ul> <div> <ul> <li>目前的版本有swagger2.0和3.0，swagger2于17年停止维护，现在最新的版本为17年发布的 Swagger3（Open Api3）。</li> </ul> <div> <ul> <li class="_mce_tagged_br">Swagger 主要包含了以下三个部分：</li> </ul> </div> <div> <ul> <li style="list-style-type: none"> <ul> <li>　　Swagger Editor：基于浏览器的编辑器，我们可以使用它编写我们 OpenAPI 规范。</li> <li>　　Swagger UI：它会将我们编写的 OpenAPI 规范呈现为交互式的 API 文档，后文我将使用浏览器来查看并且操作我们的 Rest API。</li> <li>　　Swagger Codegen：它可以通过为 OpenAPI（以前称为 Swagger）规范定义的任何 API 生成服务器存根和客户端 SDK 来简化构建过程。</li> </ul> </li> </ul> </div> </div> </div> <div> <ul> <li>SpringFox介绍（是 spring 社区维护的一个非官方项目）</li> </ul> </div> <div> <ul> <li style="list-style-type: none"> <ul> <li>　　是一个开源的API Doc的框架，Marty Pitt编写了一个基于Spring的组件swagger-springmvc，用于将swagger集成到springmvc中来， 它的前身是swagger-springmvc，可以将我们的Controller中的方法以文档的形式展现。官方定义为： Automated JSON API documentation for API's built with Spring。</li> </ul> </li> </ul> </div> <div> <ul> <ul> <li>地址：<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://github.com/springfox/springfox"  rel="nofollow">https://github.com/springfox/springfox</a></li> </ul> </ul> </div> <h3>二、Springboot2.x整合Swagger3.x</h3> <p>首先看下单体微服务是如何整合swagger3的，事实上这也是后面gateway网关聚合统一文档的步骤之一。</p> <p><strong>步骤一：</strong></p> <div> <p>SpringBoot添加pom文件依赖</p> <div class="cnblogs_code"> <pre><span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">dependency</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span><span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">groupId</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>io.springfox<span style="color: rgba(0, 0, 255, 1)">&lt;/</span><span style="color: rgba(128, 0, 0, 1)">groupId</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span><span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">artifactId</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>springfox-boot-starter<span style="color: rgba(0, 0, 255, 1)">&lt;/</span><span style="color: rgba(128, 0, 0, 1)">artifactId</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span><span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">version</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>3.0.0<span style="color: rgba(0, 0, 255, 1)">&lt;/</span><span style="color: rgba(128, 0, 0, 1)">version</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span><span style="color: rgba(0, 0, 255, 1)">&lt;/</span><span style="color: rgba(128, 0, 0, 1)">dependency</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span></pre> </div> </div> <p>如果想让浏览器展示的UI效果更好看一点，需要引入最新的下面的依赖</p> <div class="cnblogs_code"> <pre><span style="color: rgba(0, 128, 0, 1)">&lt;!--</span><span style="color: rgba(0, 128, 0, 1)">swagger UI</span><span style="color: rgba(0, 128, 0, 1)">--&gt;</span><span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">dependency</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span><span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">groupId</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>com.github.xiaoymin<span style="color: rgba(0, 0, 255, 1)">&lt;/</span><span style="color: rgba(128, 0, 0, 1)">groupId</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span><span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">artifactId</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>knife4j-spring-ui<span style="color: rgba(0, 0, 255, 1)">&lt;/</span><span style="color: rgba(128, 0, 0, 1)">artifactId</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span><span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">version</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>3.0.3<span style="color: rgba(0, 0, 255, 1)">&lt;/</span><span style="color: rgba(128, 0, 0, 1)">version</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span><span style="color: rgba(0, 0, 255, 1)">&lt;/</span><span style="color: rgba(128, 0, 0, 1)">dependency</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span></pre> </div> <p><strong>步骤二：</strong></p> <div> <p>配置文件增加配置</p> </div> <div class="cnblogs_code"> <pre><span style="color: rgba(0, 0, 0, 1)">swagger:   enable:</span><span style="color: rgba(0, 0, 255, 1)">true</span><span style="color: rgba(0, 0, 0, 1)">   application</span>-<span style="color: rgba(0, 0, 0, 1)">name: 鉴权配置中心接口   application</span>-version: 1.0<span style="color: rgba(0, 0, 0, 1)">   application</span>-description: 鉴权配置中心</pre> </div> <p><strong>步骤三：</strong></p> <p>创建配置类</p> <div class="cnblogs_code"> <pre><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> org.springframework.boot.context.properties.ConfigurationProperties;</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> org.springframework.context.annotation.Bean;</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> org.springframework.stereotype.Component;</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> io.swagger.annotations.ApiOperation;</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> lombok.Data;</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> springfox.documentation.builders.ApiInfoBuilder;</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> springfox.documentation.builders.PathSelectors;</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> springfox.documentation.builders.RequestHandlerSelectors;</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> springfox.documentation.oas.annotations.EnableOpenApi;</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> springfox.documentation.service.ApiInfo;</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> springfox.documentation.service.Contact;</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> springfox.documentation.spi.DocumentationType;</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> springfox.documentation.spring.web.plugins.Docket;</span><span style="color: rgba(0, 128, 0, 1)">/**</span><span style="color: rgba(0, 128, 0, 1)">  *</span><span style="color: rgba(128, 128, 128, 1)">@author</span><span style="color: rgba(0, 128, 0, 1)">: shf description: date: 2022/3/28 11:35</span><span style="color: rgba(0, 128, 0, 1)">*/</span><span style="color: rgba(0, 0, 0, 1)"> @Component @EnableOpenApi @ConfigurationProperties(prefix</span>= "swagger"<span style="color: rgba(0, 0, 0, 1)">) @Data</span><span style="color: rgba(0, 0, 255, 1)">public</span><span style="color: rgba(0, 0, 255, 1)">class</span><span style="color: rgba(0, 0, 0, 1)"> SwaggerConfig {</span><span style="color: rgba(0, 128, 0, 1)">/**</span><span style="color: rgba(0, 128, 0, 1)">      * 是否开启swagger，生产环境一般关闭，所以这里定义一个变量</span><span style="color: rgba(0, 128, 0, 1)">*/</span><span style="color: rgba(0, 0, 255, 1)">private</span><span style="color: rgba(0, 0, 0, 1)"> Boolean enable;</span><span style="color: rgba(0, 128, 0, 1)">/**</span><span style="color: rgba(0, 128, 0, 1)">      * 项目应用名</span><span style="color: rgba(0, 128, 0, 1)">*/</span><span style="color: rgba(0, 0, 255, 1)">private</span><span style="color: rgba(0, 0, 0, 1)"> String applicationName;</span><span style="color: rgba(0, 128, 0, 1)">/**</span><span style="color: rgba(0, 128, 0, 1)">      * 项目版本信息</span><span style="color: rgba(0, 128, 0, 1)">*/</span><span style="color: rgba(0, 0, 255, 1)">private</span><span style="color: rgba(0, 0, 0, 1)"> String applicationVersion;</span><span style="color: rgba(0, 128, 0, 1)">/**</span><span style="color: rgba(0, 128, 0, 1)">      * 项目描述信息</span><span style="color: rgba(0, 128, 0, 1)">*/</span><span style="color: rgba(0, 0, 255, 1)">private</span><span style="color: rgba(0, 0, 0, 1)"> String applicationDescription;      @Bean</span><span style="color: rgba(0, 0, 255, 1)">public</span><span style="color: rgba(0, 0, 0, 1)"> Docket docket() {</span><span style="color: rgba(0, 0, 255, 1)">return</span><span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> Docket(DocumentationType.OAS_30)                 .pathMapping(</span>"/"<span style="color: rgba(0, 0, 0, 1)">)</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 定义是否开启swagger，false为关闭，可以通过变量控制，线上关闭</span><span style="color: rgba(0, 0, 0, 1)">                .enable(enable)</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">配置api文档元信息</span><span style="color: rgba(0, 0, 0, 1)">                .apiInfo(apiInfo())</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 选择哪些接口作为swagger的doc发布</span><span style="color: rgba(0, 0, 0, 1)">                .select()</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">apis() 控制哪些接口暴露给swagger，</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> RequestHandlerSelectors.any() 所有都暴露</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> RequestHandlerSelectors.basePackage("net.xdclass.*")  指定包位置</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> withMethodAnnotation(ApiOperation.class)标记有这个注解 ApiOperation</span>                 .apis(RequestHandlerSelectors.withMethodAnnotation(ApiOperation.<span style="color: rgba(0, 0, 255, 1)">class</span><span style="color: rgba(0, 0, 0, 1)">))                  .paths(PathSelectors.any())                  .build();     }</span><span style="color: rgba(0, 0, 255, 1)">private</span><span style="color: rgba(0, 0, 0, 1)"> ApiInfo apiInfo() {</span><span style="color: rgba(0, 0, 255, 1)">return</span><span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> ApiInfoBuilder()                 .title(applicationName)                 .description(applicationDescription)                 .contact(</span><span style="color: rgba(0, 0, 255, 1)">new</span> Contact("鉴权中心平台接口文档", "www.yifeng.com", "123@qq.com"<span style="color: rgba(0, 0, 0, 1)">))                 .version(applicationVersion)                 .build();     }  }</span></pre> </div> <p><strong>启动服务看下效果：</strong></p> <p>浏览器访问http://localhost:9799/doc.html</p> <p>端口号是你服务配置指定的</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/a4e331e63b3bfd54e7150f1d3bccff5a.jpg" alt="gateway聚合swagger3统一管理api文档"></p> <h3>三、gateway统一聚合</h3> <p>成功完成上面微服务整合swagger的步骤后，还需要在网关中增加配置</p> <p><strong>步骤一：</strong></p> <p>同样的引入依赖：</p> <div class="cnblogs_code"> <pre><span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">dependency</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span><span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">groupId</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>io.springfox<span style="color: rgba(0, 0, 255, 1)">&lt;/</span><span style="color: rgba(128, 0, 0, 1)">groupId</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span><span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">artifactId</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>springfox-boot-starter<span style="color: rgba(0, 0, 255, 1)">&lt;/</span><span style="color: rgba(128, 0, 0, 1)">artifactId</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span><span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">version</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>3.0.0<span style="color: rgba(0, 0, 255, 1)">&lt;/</span><span style="color: rgba(128, 0, 0, 1)">version</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span><span style="color: rgba(0, 0, 255, 1)">&lt;/</span><span style="color: rgba(128, 0, 0, 1)">dependency</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span><span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">dependency</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span><span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">groupId</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>com.github.xiaoymin<span style="color: rgba(0, 0, 255, 1)">&lt;/</span><span style="color: rgba(128, 0, 0, 1)">groupId</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span><span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">artifactId</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>knife4j-spring-ui<span style="color: rgba(0, 0, 255, 1)">&lt;/</span><span style="color: rgba(128, 0, 0, 1)">artifactId</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span><span style="color: rgba(0, 0, 255, 1)">&lt;</span><span style="color: rgba(128, 0, 0, 1)">version</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span>3.0.3<span style="color: rgba(0, 0, 255, 1)">&lt;/</span><span style="color: rgba(128, 0, 0, 1)">version</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span><span style="color: rgba(0, 0, 255, 1)">&lt;/</span><span style="color: rgba(128, 0, 0, 1)">dependency</span><span style="color: rgba(0, 0, 255, 1)">&gt;</span></pre> </div> <p><strong>步骤二：</strong></p> <p>配置文件：</p> <div class="cnblogs_code"> <pre><span style="color: rgba(0, 0, 0, 1)">spring:   cloud:     gateway:       globalcors:         cors</span>-<span style="color: rgba(0, 0, 0, 1)">configurations:</span>'[/**]'<span style="color: rgba(0, 0, 0, 1)">:             allowCredentials:</span><span style="color: rgba(0, 0, 255, 1)">true</span><span style="color: rgba(0, 0, 0, 1)">             allowedOrigins:</span>"*"<span style="color: rgba(0, 0, 0, 1)">             allowedMethods:</span>"*"<span style="color: rgba(0, 0, 0, 1)">             allowedHeaders:</span>"*"<span style="color: rgba(0, 0, 0, 1)">       routes:</span>-<span style="color: rgba(0, 0, 0, 1)"> filters:</span>- RequestTime=<span style="color: rgba(0, 0, 255, 1)">true</span>             - StripPrefix=1<span style="color: rgba(0, 0, 0, 1)">           id: core</span>-<span style="color: rgba(0, 0, 0, 1)">route           predicates:</span>- Path=/core/**<span style="color: rgba(0, 128, 0, 1)">           uri: xxxxxxxx   gateway-config:   uriWhitelist:     - /v3/api-docs</span></pre> </div> <p>在网关的全局过滤器中要将配置的白名单放行。</p> <p><strong>步骤三：</strong></p> <p>添加路由枚举类，将上面配置文件中的每个微服务的路由ID替换为中文，即在UI页面的左上角显示的微服务文档名称。</p> <div class="cnblogs_code"> <pre><span style="color: rgba(0, 128, 0, 1)">/**</span><span style="color: rgba(0, 128, 0, 1)">  * 服务路由枚举  *  *</span><span style="color: rgba(128, 128, 128, 1)">@author</span><span style="color: rgba(0, 128, 0, 1)"> shf  * @date Created in 2022-03-28 16:28</span><span style="color: rgba(0, 128, 0, 1)">*/</span><span style="color: rgba(0, 0, 255, 1)">public</span><span style="color: rgba(0, 0, 255, 1)">enum</span><span style="color: rgba(0, 0, 0, 1)"> ServerRouteEnum {</span><span style="color: rgba(0, 128, 0, 1)">/**</span><span style="color: rgba(0, 128, 0, 1)">      * 路由信息</span><span style="color: rgba(0, 128, 0, 1)">*/</span><span style="color: rgba(0, 0, 0, 1)">     CORE_ROUTE(</span>"core-route", "开放平台鉴权配置接口"<span style="color: rgba(0, 0, 0, 1)">);</span><span style="color: rgba(0, 0, 255, 1)">private</span><span style="color: rgba(0, 0, 0, 1)"> String routeId;</span><span style="color: rgba(0, 0, 255, 1)">private</span><span style="color: rgba(0, 0, 0, 1)"> String swaggerInfo;      ServerRouteEnum(String routeId, String swaggerInfo) {</span><span style="color: rgba(0, 0, 255, 1)">this</span>.routeId =<span style="color: rgba(0, 0, 0, 1)"> routeId;</span><span style="color: rgba(0, 0, 255, 1)">this</span>.swaggerInfo =<span style="color: rgba(0, 0, 0, 1)"> swaggerInfo;     }</span><span style="color: rgba(0, 128, 0, 1)">/**</span><span style="color: rgba(0, 128, 0, 1)">      * 根据路由id获取swagger信息      *      *</span><span style="color: rgba(128, 128, 128, 1)">@param</span><span style="color: rgba(0, 128, 0, 1)"> routId 路由id      *</span><span style="color: rgba(128, 128, 128, 1)">@return</span><span style="color: rgba(0, 128, 0, 1)"> swagger信息</span><span style="color: rgba(0, 128, 0, 1)">*/</span><span style="color: rgba(0, 0, 255, 1)">public</span><span style="color: rgba(0, 0, 255, 1)">static</span><span style="color: rgba(0, 0, 0, 1)"> String getSwaggerInfoByRoutId(String routId) {</span><span style="color: rgba(0, 0, 255, 1)">for</span><span style="color: rgba(0, 0, 0, 1)"> (ServerRouteEnum routeEnum : ServerRouteEnum.values()) {</span><span style="color: rgba(0, 0, 255, 1)">if</span><span style="color: rgba(0, 0, 0, 1)"> (routId.equals(routeEnum.getRouteId())) {</span><span style="color: rgba(0, 0, 255, 1)">return</span><span style="color: rgba(0, 0, 0, 1)"> routeEnum.getSwaggerInfo();             }         }</span><span style="color: rgba(0, 0, 255, 1)">return</span><span style="color: rgba(0, 0, 255, 1)">null</span><span style="color: rgba(0, 0, 0, 1)">;     }</span><span style="color: rgba(0, 128, 0, 1)">/**</span><span style="color: rgba(0, 128, 0, 1)">      *</span><span style="color: rgba(128, 128, 128, 1)">@return</span><span style="color: rgba(0, 128, 0, 1)"> the routeId</span><span style="color: rgba(0, 128, 0, 1)">*/</span><span style="color: rgba(0, 0, 255, 1)">public</span><span style="color: rgba(0, 0, 0, 1)"> String getRouteId() {</span><span style="color: rgba(0, 0, 255, 1)">return</span><span style="color: rgba(0, 0, 0, 1)"> routeId;     }</span><span style="color: rgba(0, 128, 0, 1)">/**</span><span style="color: rgba(0, 128, 0, 1)">      *</span><span style="color: rgba(128, 128, 128, 1)">@param</span><span style="color: rgba(0, 128, 0, 1)"> routeId : the routeId to set</span><span style="color: rgba(0, 128, 0, 1)">*/</span><span style="color: rgba(0, 0, 255, 1)">public</span><span style="color: rgba(0, 0, 255, 1)">void</span><span style="color: rgba(0, 0, 0, 1)"> setRouteId(String routeId) {</span><span style="color: rgba(0, 0, 255, 1)">this</span>.routeId =<span style="color: rgba(0, 0, 0, 1)"> routeId;     }</span><span style="color: rgba(0, 128, 0, 1)">/**</span><span style="color: rgba(0, 128, 0, 1)">      *</span><span style="color: rgba(128, 128, 128, 1)">@return</span><span style="color: rgba(0, 128, 0, 1)"> the swaggerInfo</span><span style="color: rgba(0, 128, 0, 1)">*/</span><span style="color: rgba(0, 0, 255, 1)">public</span><span style="color: rgba(0, 0, 0, 1)"> String getSwaggerInfo() {</span><span style="color: rgba(0, 0, 255, 1)">return</span><span style="color: rgba(0, 0, 0, 1)"> swaggerInfo;     }</span><span style="color: rgba(0, 128, 0, 1)">/**</span><span style="color: rgba(0, 128, 0, 1)">      *</span><span style="color: rgba(128, 128, 128, 1)">@param</span><span style="color: rgba(0, 128, 0, 1)"> swaggerInfo : the swaggerInfo to set</span><span style="color: rgba(0, 128, 0, 1)">*/</span><span style="color: rgba(0, 0, 255, 1)">public</span><span style="color: rgba(0, 0, 255, 1)">void</span><span style="color: rgba(0, 0, 0, 1)"> setSwaggerInfo(String swaggerInfo) {</span><span style="color: rgba(0, 0, 255, 1)">this</span>.swaggerInfo =<span style="color: rgba(0, 0, 0, 1)"> swaggerInfo;     } }</span></pre> </div> <p><strong>最后一步：</strong></p> <p>新增配置类：</p> <p>部分说明：</p> <p>①SwaggerResource：处理的是UI页面中顶部的选择框以及拉取到每个微服务上swagger接口文档的json数据。</p> <p>②RouteLocator：获取spring cloud gateway中注册的路由</p> <div class="cnblogs_code"> <pre><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> org.apache.commons.lang3.StringUtils;</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> org.springframework.cloud.gateway.config.GatewayProperties;</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> org.springframework.cloud.gateway.route.RouteLocator;</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> org.springframework.cloud.gateway.support.NameUtils;</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> org.springframework.context.annotation.Primary;</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> org.springframework.stereotype.Component;</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> java.util.ArrayList;</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> java.util.List;</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> springfox.documentation.swagger.web.SwaggerResource;</span><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> springfox.documentation.swagger.web.SwaggerResourcesProvider;</span><span style="color: rgba(0, 128, 0, 1)">/**</span><span style="color: rgba(0, 128, 0, 1)">  *</span><span style="color: rgba(128, 128, 128, 1)">@author</span><span style="color: rgba(0, 128, 0, 1)">: shf description: date: 2022/3/28 14:16</span><span style="color: rgba(0, 128, 0, 1)">*/</span><span style="color: rgba(0, 0, 0, 1)"> @Component @Primary</span><span style="color: rgba(0, 0, 255, 1)">public</span><span style="color: rgba(0, 0, 255, 1)">class</span> SwaggerProvider<span style="color: rgba(0, 0, 255, 1)">implements</span><span style="color: rgba(0, 0, 0, 1)"> SwaggerResourcesProvider {</span><span style="color: rgba(0, 0, 255, 1)">public</span><span style="color: rgba(0, 0, 255, 1)">static</span><span style="color: rgba(0, 0, 255, 1)">final</span> String API_URI = "/v3/api-docs"<span style="color: rgba(0, 0, 0, 1)">;</span><span style="color: rgba(0, 0, 255, 1)">private</span><span style="color: rgba(0, 0, 255, 1)">final</span><span style="color: rgba(0, 0, 0, 1)"> RouteLocator routeLocator;</span><span style="color: rgba(0, 0, 255, 1)">private</span><span style="color: rgba(0, 0, 255, 1)">final</span><span style="color: rgba(0, 0, 0, 1)"> GatewayProperties gatewayProperties;</span><span style="color: rgba(0, 0, 255, 1)">public</span><span style="color: rgba(0, 0, 0, 1)"> SwaggerProvider(RouteLocator routeLocator, GatewayProperties gatewayProperties) {</span><span style="color: rgba(0, 0, 255, 1)">this</span>.routeLocator =<span style="color: rgba(0, 0, 0, 1)"> routeLocator;</span><span style="color: rgba(0, 0, 255, 1)">this</span>.gatewayProperties =<span style="color: rgba(0, 0, 0, 1)"> gatewayProperties;     }      @Override</span><span style="color: rgba(0, 0, 255, 1)">public</span> List&lt;SwaggerResource&gt;<span style="color: rgba(0, 0, 0, 1)"> get() {         List</span>&lt;SwaggerResource&gt; resources =<span style="color: rgba(0, 0, 255, 1)">new</span> ArrayList&lt;&gt;<span style="color: rgba(0, 0, 0, 1)">();         List</span>&lt;String&gt; routes =<span style="color: rgba(0, 0, 255, 1)">new</span> ArrayList&lt;&gt;<span style="color: rgba(0, 0, 0, 1)">();</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 取出gateway的route</span>         routeLocator.getRoutes().subscribe(route -&gt;<span style="color: rgba(0, 0, 0, 1)"> routes.add(route.getId()));</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 结合配置的route-路径(Path)，和route过滤，只获取在枚举中说明的route节点</span>         gatewayProperties.getRoutes().stream().filter(routeDefinition -&gt;<span style="color: rgba(0, 0, 0, 1)"> routes.contains(routeDefinition.getId()))                 .forEach(routeDefinition</span>-&gt;<span style="color: rgba(0, 0, 0, 1)"> routeDefinition.getPredicates().stream()</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 目前只处理Path断言  Header或其他路由需要另行扩展</span>                         .filter(predicateDefinition -&gt; ("Path"<span style="color: rgba(0, 0, 0, 1)">).equalsIgnoreCase(predicateDefinition.getName()))                         .forEach(predicateDefinition</span>-&gt;<span style="color: rgba(0, 0, 0, 1)"> {                                     String routeId</span>=<span style="color: rgba(0, 0, 0, 1)"> routeDefinition.getId();                                     String swaggerInfo</span>=<span style="color: rgba(0, 0, 0, 1)"> ServerRouteEnum.getSwaggerInfoByRoutId(routeId);</span><span style="color: rgba(0, 0, 255, 1)">if</span><span style="color: rgba(0, 0, 0, 1)"> (StringUtils.isNotEmpty(swaggerInfo)) {                                         resources.add(swaggerResource(swaggerInfo, predicateDefinition.getArgs().get(NameUtils.GENERATED_NAME_PREFIX</span>+ "0").replace("/**"<span style="color: rgba(0, 0, 0, 1)">, API_URI)));                                     }                                 }                         ));</span><span style="color: rgba(0, 0, 255, 1)">return</span><span style="color: rgba(0, 0, 0, 1)"> resources;     }</span><span style="color: rgba(0, 0, 255, 1)">private</span><span style="color: rgba(0, 0, 0, 1)"> SwaggerResource swaggerResource(String name, String location) {         SwaggerResource swaggerResource</span>=<span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> SwaggerResource();         swaggerResource.setName(name);         swaggerResource.setLocation(location);         swaggerResource.setSwaggerVersion(</span>"3.0"<span style="color: rgba(0, 0, 0, 1)">);</span><span style="color: rgba(0, 0, 255, 1)">return</span><span style="color: rgba(0, 0, 0, 1)"> swaggerResource;     }  }</span></pre> </div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-51571.htm">有名的动物医院有哪些名字（高端的动物医院名字）</a></p>
                                        <p>下一个：<a href="/news/article-52104.htm">动物疫苗价格排行榜前十的有哪些种类图片及价格（动物疫苗排名）</a></p>
                                    </div>
                                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-38071.htm" title="python多线程详解（超详细）">python多线程详解（超详细）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-2-free-high-speed-nodes.htm" title="「1月2日」最高速度21.3M/S，2025年Clash/SSR/Shadowrocket/V2ray每天更新免费节点订阅链接">「1月2日」最高速度21.3M/S，2025年Clash/SSR/Shadowrocket/V2ray每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-18-free-clash.htm" title="「12月18日」最高速度21.4M/S，2024年SSR/V2ray/Shadowrocket/Clash每天更新免费节点订阅链接">「12月18日」最高速度21.4M/S，2024年SSR/V2ray/Shadowrocket/Clash每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-24808.htm" title="动物疫苗接种方法视频 动物疫苗接种方法视频教程">动物疫苗接种方法视频 动物疫苗接种方法视频教程</a></li>
                        <li class="py-2"><a href="/news/article-41547.htm" title="可以免费领养宠物的软件下载（可以免费领养宠物的软件叫什么）">可以免费领养宠物的软件下载（可以免费领养宠物的软件叫什么）</a></li>
                        <li class="py-2"><a href="/news/article-39087.htm" title="Vue组件之间传值/调用方法的几种方式">Vue组件之间传值/调用方法的几种方式</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-9-shadowrocket-node.htm" title="「11月9日」最高速度20.3M/S，2024年Shadowrocket/SSR/Clash/V2ray每天更新免费节点订阅链接">「11月9日」最高速度20.3M/S，2024年Shadowrocket/SSR/Clash/V2ray每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-2-6-free-ssr-node.htm" title="「2月6日」最高速度19.3M/S，2025年Clash/SSR/Shadowrocket/V2ray每天更新免费节点订阅链接">「2月6日」最高速度19.3M/S，2025年Clash/SSR/Shadowrocket/V2ray每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-36615.htm" title="宠物用品批发店怎么样（宠物批发用品在哪里）">宠物用品批发店怎么样（宠物批发用品在哪里）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-22-clash-node.htm" title="「1月22日」最高速度22.6M/S，2025年Clash/V2ray/Shadowrocket/SSR每天更新免费节点订阅链接">「1月22日」最高速度22.6M/S，2025年Clash/V2ray/Shadowrocket/SSR每天更新免费节点订阅链接</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">21</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">30</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                    </ul>
    </div>
</div>



                    </div>
                </div>
            </div>
        </section><!-- End About Section -->
    </main><!-- End #main -->
        <!-- ======= Footer ======= -->
    <footer id="footer">
        <div class="container footer-bottom clearfix">
            <div class="copyright">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                V2rayClashNode节点订阅站 版权所有
                <br />
                Powered by WordPress
            </div>
        </div>
    </footer><!-- End Footer -->
    <a href="#" class="back-to-top d-flex align-items-center justify-content-center"><i class="bi bi-arrow-up-short"></i></a>
    <!-- Vendor JS Files -->
    <script src="/assets/website/js/frontend/v2rayclashnode/jquery-3.5.1.min.js"></script>
    <script src="/assets/website/js/frontend/v2rayclashnode/bootstrap/js/bootstrap.bundle.min.js"></script>
    <script src="/assets/website/js/frontend/v2rayclashnode/glightbox/js/glightbox.min.js"></script>
    <script src="/assets/website/js/frontend/v2rayclashnode/isotope-layout/isotope.pkgd.min.js"></script>
    <script src="/assets/website/js/frontend/v2rayclashnode/php-email-form/validate.js"></script>
    <script src="/assets/website/js/frontend/v2rayclashnode/purecounter/purecounter.js"></script>
    <script src="/assets/website/js/frontend/v2rayclashnode/swiper/swiper-bundle.min.js"></script>
    <!-- Template Main JS File -->
    <script src="/assets/website/js/frontend/v2rayclashnode/main.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>