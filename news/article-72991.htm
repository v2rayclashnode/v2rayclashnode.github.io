<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://v2rayclashnode.github.io/news/article-72991.htm" />
    <meta charset="utf-8">
    <meta content="width=device-width, initial-scale=1.0" name="viewport">
    <title>使用 Eslint +  husky + lint-staged + Prettier 提高前端项目质量、统一项目代码风格</title>
        <meta name="description" content="使用 Eslint + husky + lint-staged + Prettier 提高前端项目质量、统一项目代码风格  Eslint 代码检查，编辑器启用 Eslint 之后，不符合规范的会自动进" />
        <link rel="icon" href="/assets/website/img/v2rayclashnode/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="V2rayClashNode节点订阅站">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://v2rayclashnode.github.io/news/article-72991.htm" />
    <meta property="og:site_name" content="V2rayClashNode节点订阅站" />
    <meta property="og:title" content="使用 Eslint +  husky + lint-staged + Prettier 提高前端项目质量、统一项目代码风格" />
    <meta property="og:image" content="https://v2rayclashnode.github.io/uploads/20240531/6d0b3acb1eb66f31bcffd5afc936c8f9.webp" />
        <meta property="og:release_date" content="2025-03-13T09:22:16" />
    <meta property="og:updated_time" content="2025-03-13T09:22:16" />
        <meta property="og:description" content="使用 Eslint + husky + lint-staged + Prettier 提高前端项目质量、统一项目代码风格  Eslint 代码检查，编辑器启用 Eslint 之后，不符合规范的会自动进" />
    
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="使用 Eslint +  husky + lint-staged + Prettier 提高前端项目质量、统一项目代码风格">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">

    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css?family=Open+Sans:300,300i,400,400i,600,600i,700,700i|Raleway:300,300i,400,400i,500,500i,600,600i,700,700i|Poppins:300,300i,400,400i,500,500i,600,600i,700,700i" rel="stylesheet">
    <!-- Vendor CSS Files -->
    <link href="/assets/website/js/frontend/v2rayclashnode/bootstrap/css/bootstrap.min.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/v2rayclashnode/bootstrap-icons/bootstrap-icons.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/v2rayclashnode/boxicons/css/boxicons.min.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/v2rayclashnode/glightbox/css/glightbox.min.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/v2rayclashnode/swiper/swiper-bundle.min.css" rel="stylesheet">
    <!-- Template Main CSS File -->
    <link href="/assets/website/css/v2rayclashnode/style.css" rel="stylesheet">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-Y4BEYC2CJF"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-Y4BEYC2CJF');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!-- ======= Header ======= -->
    <header id="header" class="fixed-top">
        <div class="container d-flex align-items-center justify-content-between">
            <a href="/">
                        <span class="logo">V2ray Clash Node</span>
                        </a>
            <nav id="navbar" class="navbar">
                <ul>
                                        <li><a class="nav-link" href="/">首页</a></li>
                                        <li><a class="nav-link" href="/free-nodes/">免费节点</a></li>
                                        <li><a class="nav-link" href="/paid-subscribe/">推荐机场</a></li>
                                        <li><a class="nav-link" href="/client.htm">客户端</a></li>
                                        <li><a class="nav-link" href="/news/">新闻资讯</a></li>
                                    </ul>
                <i class="bi bi-list mobile-nav-toggle"></i>
            </nav><!-- .navbar -->
        </div>
    </header><!-- End Header -->
    <main id="main">
        <!-- ======= Breadcrumbs ======= -->
        <section class="breadcrumbs">
            <div class="container">
                <div class="d-flex justify-content-between align-items-center">
                    <div class="row">
                        <h1>使用 Eslint +  husky + lint-staged + Prettier 提高前端项目质量、统一项目代码风格</h1>
                    </div>
                </div>
            </div>
            <div class="container">
                <ol>
                    <li><a href="/">首页</a></li>
                    <li><a href="/news/">新闻资讯</a></li>
                    <li>正文</li>
                </ol>
            </div>
        </section><!-- End Breadcrumbs -->
        <!-- ======= About Section ======= -->
        <section id="about" class="about">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                                        <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <h2><a id="_Eslint___husky__lintstaged__Prettier__0" rel="nofollow"></a>使用 Eslint + husky + lint-staged + Prettier 提高前端项目质量、统一项目代码风格</h2> <ul> <li><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://eslint.org/docs/user-guide/getting-started"  rel="nofollow"><strong>Eslint</strong></a> 代码检查，编辑器启用 Eslint 之后，不符合规范的会自动进行提示。</li> <li><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://prettier.io/docs/en/install.html"  rel="nofollow"><strong>Prettier</strong></a> 让代码变得更 pretty，会更改不符合检测要求的代码，自动格式化。</li> <li><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://github.com/typicode/husky"  rel="nofollow"><strong>husky</strong></a> git 每步操作的钩子，没执行一个操作都会执行一次对应的钩子函数，执行 pre-commit 操作时，执行 Prettier 格式化脚本，即可自动的格式化代码，让 commit 之后的代码都符合 Prettier规范。</li> <li><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://github.com/okonet/lint-staged"  rel="nofollow"><strong>lint-staged</strong></a> 想想如果你在一个有一定规模的项目里突然加入一个格式化工具，是不是整个项目都要变天？lint-staged 就是用来只对变更的文件进行处理的</li> </ul> <h3><a id="_6" rel="nofollow"></a>安装依赖</h3> <pre><code>npm i -D husky lint-staged prettier eslint-plugin-prettier eslint-config-prettier</code></pre> <h3><a id="_eslintrc__12" rel="nofollow"></a>配置 .eslintrc (此处只是举例，具体根据项目自己配置)</h3> <pre><code>{   "extends": ["airbnb", "prettier"],   "parser": "babel-eslint",   "env": {     "browser": true,     "es6": true,     "node": true   },   "parserOptions": {     "ecmaVersion": 6,     "sourceType": "module"   },   "rules": {     "space-in-parens": [0],     "no-tabs": [0],     "global-require": [0],     "react/jsx-filename-extension": [0],     "indent": ["error", 2],     "react/jsx-indent": [0],     "jsx-a11y/anchor-is-valid": [0],     "import/extensions": [0],     "react/jsx-curly-spacing": [0],     "react/jsx-tag-spacing": [0],     "react/require-default-props": [0],     "class-methods-use-this": ["off"],     "arrow-body-style": ["warn", "always"],     "padded-blocks": ["off"],     "no-trailing-spaces": ["error", { "ignoreComments": true }],     "react/jsx-indent-props": [0],     "no-nested-ternary": ["error"],     "no-underscore-dangle": ["off", "always"],     "prefer-destructuring": ["warn"],     "camelcase": ["warn"],     "no-irregular-whitespace": ["warn"],     "jsx-a11y/no-static-element-interactions": [0],     "jsx-a11y/click-events-have-key-events": [0],     "no-return-assign": ["off"],     "consistent-return": ["error", { "treatUndefinedAsUnspecified": true }],     "dot-notation": ["warn"],     "linebreak-style": "off",     "quotes": ["error", "double"],     "no-console": ["warn", { "allow": ["warn", "error", "log"] }],     "import/no-useless-path-segments": "off",     "object-curly-newline": "off",     "no-shadow": "off",     "react/jsx-one-expression-per-line": "off",     "jsx-a11y/label-has-associated-control": "off",     "jsx-a11y/label-has-for": "off",     "max-len": ["error", { "code": 100 }]   } }</code></pre> <ul> <li><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://github.com/prettier/eslint-config-prettier"  rel="nofollow">eslint-config-prettier</a> 禁用所有和 Prettier 产生冲突的规则</li> <li><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://github.com/prettier/eslint-plugin-prettier"  rel="nofollow">eslint-plugin-prettier</a> 把 Prettier 应用到 Eslint，配合 rules “prettier/prettier”: “error” 实现 Eslint 提醒</li> </ul> <h4><a id="_69" rel="nofollow"></a>配置文件说明</h4> <h5><a id="ESLint__71" rel="nofollow"></a>ESLint 支持几种格式的配置文件</h5> <ul> <li>JavaScript - 使用 .eslintrc.js 然后输出一个配置对象。</li> <li>YAML - 使用 .eslintrc.yaml 或 .eslintrc.yml 去定义配置的结构。</li> <li>JSON - 使用 .eslintrc.json 去定义配置的结构，ESLint 的 JSON 文件允许 JavaScript 风格的注释。</li> <li>(弃用) - 使用 .eslintrc，可以使 JSON 也可以是 YAML。</li> <li>package.json - 在 package.json 里创建一个 eslintConfig属性，在那里定义你的配置。</li> </ul> <p>如果同一个目录下有多个配置文件，ESLint 只会使用一个。优先级顺序如下：</p> <ol> <li>.eslintrc.js</li> <li>.eslintrc.yaml</li> <li>.eslintrc.yml</li> <li>.eslintrc.json</li> <li>.eslintrc</li> <li>package.json</li> </ol> <h5><a id="Globals_86" rel="nofollow"></a>Globals-配置额外的全局变量</h5> <p>启用ESLint规则后，当访问当前源文件内未定义的变量时，no-undef 规则将发出警告。<br /> 而有时候，我们是需要在其他文件访问一些全局变量的，且保证能正常取到值。这时可以在 ESLint 中定义这些全局变量，这样 ESLint 就不会发出警告了。</p> <ul> <li>用注释指定全局变量，格式如下：</li> </ul> <pre><code>/* global var1, var2 */</code></pre> <p>这定义了两个全局变量，var1 和 var2。如果你想选择性地指定这些全局变量可以被写入(而不是只被读取)，那么你可以用一个 “writable” 的标志来设置它们:</p> <pre><code>/* global var1:writable, var2:writable */</code></pre> <p>配置文件中通过globals 配置属性设置，对于每个全局变量键，将对应的值设置为 “writable” 以允许重写变量，或 “readonly” 不允许重写变量。例如：</p> <pre><code>// .eslintrc.js "globals": {   "var1": "writable",   "var2": "readonly" }</code></pre> <h5><a id="Environments___107" rel="nofollow"></a>Environments - 指定脚本的运行环境</h5> <p>每种环境都有一组特定的预定义全局变量。如brower、node环境变量、es6环境变量等。</p> <pre><code>'env': {   'browser': true,   'commonjs': true,   'es6': true },</code></pre> <h5><a id="Plugins___117" rel="nofollow"></a>Plugins - 第三方插件</h5> <p>ESLint 支持使用第三方插件，先在项目中下载安装要引入的插件，配置文件中使用 plugins 关键字来存放插件名字的列表。插件名称可以省略 eslint-plugin- 前缀。</p> <pre><code> plugins: ['react', 'babel'], // eslint-plugin-react eslint-plugin-babel</code></pre> <h5><a id="Extends___123" rel="nofollow"></a>Extends - 继承</h5> <p>一个配置文件可以被基础配置中的已启用的规则继承。</p> <pre><code> extends: ["eslint:recommended","plugin:prettier/recommended"],</code></pre> <p>通过配置代码规范来确保指定的代码规约进行落地。常见的一些大厂的代码规范有<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://www.npmjs.com/package/eslint-config-ali"  rel="nofollow">阿里的前端规范</a>，<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://github.com/vuejs/eslint-config-airbnb"  rel="nofollow">airbnb</a>，<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=http://www.alloyteam.com/2017/08/13065/"  rel="nofollow">鹅厂alloyteam团队</a></p> <h5><a id="_130" rel="nofollow"></a>配置代码注释方式</h5> <p>有时候，我们需要在代码中忽略ESLint的某些规则检查，此时我们可以通过加入代码注释的方式解决：可以指定整个文件、某一行、某一区块开启/关闭 某些或全部规则检查；</p> <pre><code>/* eslint-disable */    --禁用全部规则  放在文件顶部则整个文件范围都不检查 /* eslint-disable no-alert, no-console */  --禁用某些规则 // eslint-disable-line     --当前行上禁用规则 // eslint-disable-next-line --下一行上禁用规则</code></pre> <h5><a id="Rules_138" rel="nofollow"></a>Rules-启用的规则及其各自的错误级别</h5> <p>ESLint 附带有大量的规则。你可以使用注释或配置文件修改你项目中要使用的规则。要改变一个规则设置，你必须将规则 ID 设置为下列值之一：</p> <ul> <li><mark>“off”</mark> 或<mark>0</mark> - 关闭规则</li> <li><mark>“warn”</mark> 或<mark>1</mark> - 开启规则，使用警告级别的错误：warn (不会导致程序退出)</li> <li><mark>“error”</mark> 或<mark>2</mark> - 开启规则，使用错误级别的错误：error (当被触发的时候，程序会退出)</li> </ul> <h6><a id="_httpscneslintorgdocsrules_144" rel="nofollow"></a>常见规则错误 完整规则查看<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://cn.eslint.org/docs/rules/"  rel="nofollow">官方文档</a></h6> <pre><code>"no-alert": 0,//禁止使用alert confirm prompt "no-array-constructor": 2,//禁止使用数组构造器 "no-bitwise": 0,//禁止使用按位运算符 "no-caller": 1,//禁止使用arguments.caller或arguments.callee "no-catch-shadow": 2,//禁止catch子句参数与外部作用域变量同名 "no-class-assign": 2,//禁止给类赋值 "no-cond-assign": 2,//禁止在条件表达式中使用赋值语句 "no-console": 2,//禁止使用console "no-const-assign": 2,//禁止修改const声明的变量 "no-constant-condition": 2,//禁止在条件中使用常量表达式 if(true) if(1) "no-continue": 0,//禁止使用continue "no-control-regex": 2,//禁止在正则表达式中使用控制字符 "no-debugger": 2,//禁止使用debugger "no-delete-var": 2,//不能对var声明的变量使用delete操作符 "no-div-regex": 1,//不能使用看起来像除法的正则表达式/=foo/ "no-dupe-keys": 2,//在创建对象字面量时不允许键重复 {a:1,a:1} "no-dupe-args": 2,//函数参数不能重复 "no-duplicate-case": 2,//switch中的case标签不能重复 "no-else-return": 2,//如果if语句里面有return,后面不能跟else语句 "no-empty": 2,//块语句中的内容不能为空 "no-empty-character-class": 2,//正则表达式中的[]内容不能为空 "no-empty-label": 2,//禁止使用空label "no-eq-null": 2,//禁止对null使用==或!=运算符 "no-eval": 1,//禁止使用eval "no-ex-assign": 2,//禁止给catch语句中的异常参数赋值 "no-extend-native": 2,//禁止扩展native对象 "no-extra-bind": 2,//禁止不必要的函数绑定 "no-extra-boolean-cast": 2,//禁止不必要的bool转换 "no-extra-parens": 2,//禁止非必要的括号 "no-extra-semi": 2,//禁止多余的冒号 "no-fallthrough": 1,//禁止switch穿透 "no-floating-decimal": 2,//禁止省略浮点数中的0 .5 3. "no-func-assign": 2,//禁止重复的函数声明 "no-implicit-coercion": 1,//禁止隐式转换 "no-implied-eval": 2,//禁止使用隐式eval "no-inline-comments": 0,//禁止行内备注 "no-inner-declarations": [2, "functions"],//禁止在块语句中使用声明（变量或函数） "no-invalid-regexp": 2,//禁止无效的正则表达式 "no-invalid-this": 2,//禁止无效的this，只能用在构造器，类，对象字面量 "no-irregular-whitespace": 2,//不能有不规则的空格 "no-iterator": 2,//禁止使用__iterator__ 属性 "no-label-var": 2,//label名不能与var声明的变量名相同 "no-labels": 2,//禁止标签声明 "no-lone-blocks": 2,//禁止不必要的嵌套块 "no-lonely-if": 2,//禁止else语句内只有if语句 "no-loop-func": 1,//禁止在循环中使用函数（如果没有引用外部变量不形成闭包就可以） "no-mixed-requires": [0, false],//声明时不能混用声明类型 "no-mixed-spaces-and-tabs": [2, false],//禁止混用tab和空格 "linebreak-style": [0, "windows"],//换行风格 "no-multi-spaces": 1,//不能用多余的空格 "no-multi-str": 2,//字符串不能用\换行 "no-multiple-empty-lines": [1, {"max": 2}],//空行最多不能超过2行 "no-native-reassign": 2,//不能重写native对象 "no-negated-in-lhs": 2,//in 操作符的左边不能有! "no-nested-ternary": 0,//禁止使用嵌套的三目运算 "no-new": 1,//禁止在使用new构造一个实例后不赋值 "no-new-func": 1,//禁止使用new Function "no-new-object": 2,//禁止使用new Object() "no-new-require": 2,//禁止使用new require "no-new-wrappers": 2,//禁止使用new创建包装实例，new String new Boolean new Number "no-obj-calls": 2,//不能调用内置的全局对象，比如Math() JSON() "no-octal": 2,//禁止使用八进制数字 "no-octal-escape": 2,//禁止使用八进制转义序列 "no-param-reassign": 2,//禁止给参数重新赋值 "no-path-concat": 0,//node中不能使用__dirname或__filename做路径拼接 "no-plusplus": 0,//禁止使用++，-- "no-process-env": 0,//禁止使用process.env "no-process-exit": 0,//禁止使用process.exit() "no-proto": 2,//禁止使用__proto__属性 "no-redeclare": 2,//禁止重复声明变量 "no-regex-spaces": 2,//禁止在正则表达式字面量中使用多个空格 /foo bar/ "no-restricted-modules": 0,//如果禁用了指定模块，使用就会报错 "no-return-assign": 1,//return 语句中不能有赋值表达式 "no-script-url": 0,//禁止使用javascript:void(0) "no-self-compare": 2,//不能比较自身 "no-sequences": 0,//禁止使用逗号运算符 "no-shadow": 2,//外部作用域中的变量不能与它所包含的作用域中的变量或参数同名 "no-shadow-restricted-names": 2,//严格模式中规定的限制标识符不能作为声明时的变量名使用 "no-spaced-func": 2,//函数调用时 函数名与()之间不能有空格 "no-sparse-arrays": 2,//禁止稀疏数组， [1,,2] "no-sync": 0,//nodejs 禁止同步方法 "no-ternary": 0,//禁止使用三目运算符 "no-trailing-spaces": 1,//一行结束后面不要有空格 "no-this-before-super": 0,//在调用super()之前不能使用this或super "no-throw-literal": 2,//禁止抛出字面量错误 throw "error"; "no-undef": 1,//不能有未定义的变量 "no-undef-init": 2,//变量初始化时不能直接给它赋值为undefined "no-undefined": 2,//不能使用undefined "no-unexpected-multiline": 2,//避免多行表达式 "no-underscore-dangle": 1,//标识符不能以_开头或结尾 "no-unneeded-ternary": 2,//禁止不必要的嵌套 var isYes = answer === 1 ? true : false; "no-unreachable": 2,//不能有无法执行的代码 "no-unused-expressions": 2,//禁止无用的表达式 "no-unused-vars": [2, {"vars": "all", "args": "after-used"}],//不能有声明后未被使用的变量或参数 "no-use-before-define": 2,//未定义前不能使用 "no-useless-call": 2,//禁止不必要的call和apply "no-void": 2,//禁用void操作符 "no-var": 0,//禁用var，用let和const代替 "no-warning-comments": [1, { "terms": ["todo", "fixme", "xxx"], "location": "start" }],//不能有警告备注 "no-with": 2,//禁用with "array-bracket-spacing": [2, "never"],//是否允许非空数组里面有多余的空格 "arrow-parens": 0,//箭头函数用小括号括起来 "arrow-spacing": 0,//=&gt;的前/后括号 "accessor-pairs": 0,//在对象中使用getter/setter "block-scoped-var": 0,//块语句中使用var "brace-style": [1, "1tbs"],//大括号风格 "callback-return": 1,//避免多次调用回调什么的 "camelcase": 2,//强制驼峰法命名 "comma-dangle": [2, "never"],//对象字面量项尾不能有逗号 "comma-spacing": 0,//逗号前后的空格 "comma-style": [2, "last"],//逗号风格，换行时在行首还是行尾 "complexity": [0, 11],//循环复杂度 "computed-property-spacing": [0, "never"],//是否允许计算后的键名什么的 "consistent-return": 0,//return 后面是否允许省略 "consistent-this": [2, "that"],//this别名 "constructor-super": 0,//非派生类不能调用super，派生类必须调用super "curly": [2, "all"],//必须使用 if(){} 中的{} "default-case": 2,//switch语句最后必须有default "dot-location": 0,//对象访问符的位置，换行的时候在行首还是行尾 "dot-notation": [0, { "allowKeywords": true }],//避免不必要的方括号 "eol-last": 0,//文件以单一的换行符结束 "eqeqeq": 2,//必须使用全等 "func-names": 0,//函数表达式必须有名字 "func-style": [0, "declaration"],//函数风格，规定只能使用函数声明/函数表达式 "generator-star-spacing": 0,//生成器函数*的前后空格 "guard-for-in": 0,//for in循环要用if语句过滤 "handle-callback-err": 0,//nodejs 处理错误 "id-length": 0,//变量名长度 "indent": [2, 4],//缩进风格 "init-declarations": 0,//声明时必须赋初值 "key-spacing": [0, { "beforeColon": false, "afterColon": true }],//对象字面量中冒号的前后空格 "lines-around-comment": 0,//行前/行后备注 "max-depth": [0, 4],//嵌套块深度 "max-len": [0, 80, 4],//字符串最大长度 "max-nested-callbacks": [0, 2],//回调嵌套深度 "max-params": [0, 3],//函数最多只能有3个参数 "max-statements": [0, 10],//函数内最多有几个声明 "new-cap": 2,//函数名首行大写必须使用new方式调用，首行小写必须用不带new方式调用 "new-parens": 2,//new时必须加小括号 "newline-after-var": 2,//变量声明后是否需要空一行 "object-curly-spacing": [0, "never"],//大括号内是否允许不必要的空格 "object-shorthand": 0,//强制对象字面量缩写语法 "one-var": 1,//连续声明 "operator-assignment": [0, "always"],//赋值运算符 += -=什么的 "operator-linebreak": [2, "after"],//换行时运算符在行尾还是行首 "padded-blocks": 0,//块语句内行首行尾是否要空行 "prefer-const": 0,//首选const "prefer-spread": 0,//首选展开运算 "prefer-reflect": 0,//首选Reflect的方法 "quotes": [1, "single"],//引号类型 "" '' "quote-props":[2, "always"],//对象字面量中的属性名是否强制双引号 "radix": 2,//parseInt必须指定第二个参数 "id-match": 0,//命名检测 "require-yield": 0,//生成器函数必须有yield "semi": [2, "always"],//语句强制分号结尾 "semi-spacing": [0, {"before": false, "after": true}],//分号前后空格 "sort-vars": 0,//变量声明时排序 "space-after-keywords": [0, "always"],//关键字后面是否要空一格 "space-before-blocks": [0, "always"],//不以新行开始的块{前面要不要有空格 "space-before-function-paren": [0, "always"],//函数定义时括号前面要不要有空格 "space-in-parens": [0, "never"],//小括号里面要不要有空格 "space-infix-ops": 0,//中缀操作符周围要不要有空格 "space-return-throw-case": 2,//return throw case后面要不要加空格 "space-unary-ops": [0, { "words": true, "nonwords": false }],//一元运算符的前/后要不要加空格 "spaced-comment": 0,//注释风格要不要有空格什么的 "strict": 2,//使用严格模式 "use-isnan": 2,//禁止比较时使用NaN，只能用isNaN() "valid-jsdoc": 0,//jsdoc规则 "valid-typeof": 2,//必须使用合法的typeof的值 "vars-on-top": 2,//var必须放在作用域顶部 "wrap-iife": [2, "inside"],//立即执行函数表达式的小括号风格 "wrap-regex": 0,//正则表达式字面量用小括号包起来 "yoda": [2, "never"]//禁止尤达条件</code></pre> <h4><a id="eslint__322" rel="nofollow"></a>eslint 拓展</h4> <p><strong>eslint 命令</strong><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=http://eslint.cn/docs/user-guide/command-line-interface"  rel="nofollow">参考链接</a></p> <pre><code>eslint [options] file.js [file.js] [dir]  Basic configuration: //基本配置   --no-eslintrc                  Disable use of configuration from .eslintrc.* //禁止使用来自.eslintrc.*的配置文件   -c, --config path::String      Use this configuration, overriding .eslintrc.* config options if present //如果存在.eslintrc.*，则使用且重写该配置文件   --env [String]                 Specify environments //指定环境   --ext [String]                 Specify JavaScript file extensions - default: .js //指定的JS文件扩展名，默认：.js   --global [String]              Define global variables //定义全局变量   --parser String                Specify the parser to be used //指定使用某种解析器   --parser-options Object        Specify parser options //指定解析参数  Specifying rules and plugins: //指定规则和插件   --rulesdir [path::String]      Use additional rules from this directory //从该路径使用额外的规则   --plugin [String]              Specify plugins //指定插件   --rule Object                  Specify rules//指定规则  Fixing problems://修正问题   --fix                          Automatically fix problems//自动修复问题   --fix-dry-run                  Automatically fix problems without saving the changes to the file system//自动修复问题而不保存对文件系统的更改  Ignoring files: //忽略文件   --ignore-path path::String     Specify path of ignore file //指定忽略的文件   --no-ignore                    Disable use of ignore files and patterns //禁止使用忽略文件和样式   --ignore-pattern [String]      Pattern of files to ignore (in addition to those in .eslintignore) //要忽略的文件模式（除了在.eslintignore中的文件）  Using stdin: //unix]标准输入（设备）文件   --stdin                        Lint code provided on &lt;STDIN&gt; - default: false   --stdin-filename String        Specify filename to process STDIN as //指定用于处理stdin的文件名  Handling warnings://处理警告   --quiet                        Report errors only - default: false //仅以错误报告出来   --max-warnings Int             Number of warnings to trigger nonzero exit code - default: -1 //要触发非零退出代码的警告数-默认值：-1   Output:   -o, --output-file path::String  Specify file to write report to //指定输出的文件路径   -f, --format String            Use a specific output format - default: stylish //使用特定的输出格式-默认：stylish   --color, --no-color            Force enabling/disabling of color  Inline configuration comments: //内联配置注释   --no-inline-config             Prevent comments from changing config or rules //阻止注释更改配置或规则   --report-unused-disable-directives  Adds reported errors for unused eslint-disable directives //为未使用的eslint disable指令添加报告的错误  Caching:   --cache                        Only check changed files - default: false //仅仅检查改变过的文件   --cache-file path::String      Path to the cache file. Deprecated: use --cache-location - default: .eslintcache//缓存文件的路径。已弃用：使用--缓存位置-默认值：.eslintcache   --cache-location path::String  Path to the cache file or directory//缓存文件或文件夹的路径  Miscellaneous://其他   --init                         Run config initialization wizard - default: false //运行配置初始化向导-默认值：false   --debug                        Output debugging information//输出调试信息   -h, --help                     Show help    -v, --version                  Output the version number   --print-config path::String    Print the configuration for the given file//打印给定文件的配置</code></pre> <p><strong>.editorconfig</strong><br /> 在根目录下创建.editorconfig文件，增加以下配置</p> <pre><code># http://editorconfig.org root = true  # 说明 ## 设置文件编码为 UTF-8； ## 用两个空格代替制表符； ## 在保存时删除尾部的空白字符； ## 在文件结尾添加一个空白行； [*] indent_style = space indent_size = 2 end_of_line = lf charset = utf-8 trim_trailing_whitespace = true insert_final_newline = true  [*.md] trim_trailing_whitespace = false  [Makefile] indent_style = tab</code></pre> <blockquote> <p>EditorConfig项目包含一个用于定义编码样式的文件格式和一个文本编辑器插件集合，这些文本编辑器插件使编辑器可以读取文件格式并遵循定义的样式。</p> </blockquote> <ol> <li>.editorconfig的配置有助于从事同一项目的多个开发人员在跨多个编辑器和IDE使用时保持一致的编码风格。</li> <li>某些编辑器已默认集成对EditorConfig的支持，比如常用的：Webstorm、IntelliJ IDEA等；</li> <li>而另一些编辑器则需要借助安装对应的插件来支持：比如 Visual Studio Code、Atom等；<br /> 我们常用的Visual Studio Code安装的必装插件：<mark>EditorConfig for VS Code</mark></li> </ol> <h3><a id="_prettierrc_416" rel="nofollow"></a>配置 .prettierrc</h3> <p>具体规则<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://prettier.io/docs/en/options.html"  rel="nofollow">参考官网</a></p> <pre><code>{   // 设置强制单引号   "singleQuote": true,   // 为多行数组的非末尾行添加逗号 es5的对象，数组等   "trailingComma": "es5",   // 每行最大宽度 100   "printWidth": 100,   // 设置语句末尾不加分号   "semi": false,   // jsx中使用单引号   "jsxSingleQuote": true, }</code></pre> <h3><a id="_husky_433" rel="nofollow"></a>配置 husky</h3> <pre><code>npm i husky -D（如果安装失败需检查node版本，需要node10以上）</code></pre> <p>husky 的配置可以使用 .huskyrc、.huskyrc.json、.huskyrc.js 或 husky.config.js 文件。<br /> 这里介绍在 package.json 增加以下配置：</p> <pre><code>"husky": {     "hooks": {       "pre-commit": "lint-staged"     } },</code></pre> <h3><a id="_lintstaged_449" rel="nofollow"></a>配置 lint-staged</h3> <p>这里介绍在 package.json 增加以下配置：</p> <pre><code>"lint-staged": {   "src/**/*.js": [     "eslint --fix --ext .js",     "prettier --write",     "git add"   ] },</code></pre> </div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-72346.htm">MySQL 回表</a></p>
                                        <p>下一个：<a href="/news/article-72992.htm">你不知道的Python容器</a></p>
                                    </div>
                                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2025-3-5-node-share-links.htm" title="「3月5日」最高速度19.9M/S，2025年V2ray/Clash/SSR/Shadowrocket每天更新免费节点订阅链接">「3月5日」最高速度19.9M/S，2025年V2ray/Clash/SSR/Shadowrocket每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-2-21-free-shadowrocket-node.htm" title="「2月21日」最高速度20.2M/S，2025年V2ray/Shadowrocket/Clash/SSR每天更新免费节点订阅链接">「2月21日」最高速度20.2M/S，2025年V2ray/Shadowrocket/Clash/SSR每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-42042.htm" title="宠物粮加工设备一套得多少钱 宠物粮食加工厂设备">宠物粮加工设备一套得多少钱 宠物粮食加工厂设备</a></li>
                        <li class="py-2"><a href="/news/article-65253.htm" title="宠物粮食批发厂家价格表图片大全（宠物粮食供应商真的赚钱吗）">宠物粮食批发厂家价格表图片大全（宠物粮食供应商真的赚钱吗）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-28-clash-node-daily-updates.htm" title="「1月28日」最高速度19.3M/S，2025年SSR/Clash/V2ray/Shadowrocket每天更新免费节点订阅链接">「1月28日」最高速度19.3M/S，2025年SSR/Clash/V2ray/Shadowrocket每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-17-node-share-links.htm" title="「1月17日」最高速度21.5M/S，2025年Clash/Shadowrocket/SSR/V2ray每天更新免费节点订阅链接">「1月17日」最高速度21.5M/S，2025年Clash/Shadowrocket/SSR/V2ray每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-38582.htm" title="dell新版bios设置硬盘启动模式（dellbios设置硬盘启动项）">dell新版bios设置硬盘启动模式（dellbios设置硬盘启动项）</a></li>
                        <li class="py-2"><a href="/news/article-61025.htm" title="一片枫叶的拼音是什么（一片枫叶猜一首歌）">一片枫叶的拼音是什么（一片枫叶猜一首歌）</a></li>
                        <li class="py-2"><a href="/news/article-55893.htm" title="鲜湿面条生产线视频(湿面条生产工艺流程图)">鲜湿面条生产线视频(湿面条生产工艺流程图)</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-24-free-node-subscribe-links.htm" title="「1月24日」最高速度19.1M/S，2025年Clash/SSR/V2ray/Shadowrocket每天更新免费节点订阅链接">「1月24日」最高速度19.1M/S，2025年Clash/SSR/V2ray/Shadowrocket每天更新免费节点订阅链接</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">45</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">84</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">84</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                    </ul>
    </div>
</div>



                    </div>
                </div>
            </div>
        </section><!-- End About Section -->
    </main><!-- End #main -->
        <!-- ======= Footer ======= -->
    <footer id="footer">
        <div class="container footer-bottom clearfix">
            <div class="copyright">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                V2rayClashNode节点订阅站 版权所有
                <br />
                Powered by WordPress
            </div>
        </div>
    </footer><!-- End Footer -->
    <a href="#" class="back-to-top d-flex align-items-center justify-content-center"><i class="bi bi-arrow-up-short"></i></a>
    <!-- Vendor JS Files -->
    <script src="/assets/website/js/frontend/v2rayclashnode/jquery-3.5.1.min.js"></script>
    <script src="/assets/website/js/frontend/v2rayclashnode/bootstrap/js/bootstrap.bundle.min.js"></script>
    <script src="/assets/website/js/frontend/v2rayclashnode/glightbox/js/glightbox.min.js"></script>
    <script src="/assets/website/js/frontend/v2rayclashnode/isotope-layout/isotope.pkgd.min.js"></script>
    <script src="/assets/website/js/frontend/v2rayclashnode/php-email-form/validate.js"></script>
    <script src="/assets/website/js/frontend/v2rayclashnode/purecounter/purecounter.js"></script>
    <script src="/assets/website/js/frontend/v2rayclashnode/swiper/swiper-bundle.min.js"></script>
    <!-- Template Main JS File -->
    <script src="/assets/website/js/frontend/v2rayclashnode/main.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>